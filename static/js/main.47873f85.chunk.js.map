{"version":3,"sources":["providers/ThemeColorProvider.js","components/navbar/Navbar.js","api/index.js","providers/CountrieProvider.js","hooks/useFilter.js","components/filter/Filter.js","components/alert/Alert.js","components/countrie/Countrie.js","components/countries/Countries.js","components/countrieDetail/CountrieDetail.js","routers/AppRouter.js","App.js","index.js"],"names":["ThemeContext","createContext","useTheme","useContext","ThemeColorProvider","children","useState","localStorage","getItem","theme","setTheme","document","body","className","Provider","value","NavBar","onClick","setItem","color","baseURL","getCountriesByContinent","a","continent","URL","axios","get","countries","data","console","log","getCountrieByCode","code","countrie","CountrieContext","useCountries","CountrieProvider","initialState","filter","setFilter","changeContinent","target","changeCountrie","useFilter","setCountries","currentCountries","setCurrentCountries","useEffect","currentCountrie","name","toLowerCase","includes","fetchedCountries","fetchCountries","Filter","onChange","type","placeholder","id","Alert","message","Countrie","alpha2Code","population","region","capital","flag","history","useHistory","push","src","alt","Countries","length","toUpperCase","map","CountrieDetail","useParams","setCurrentCountrie","getInformation","countriCurrencies","currentLanguages","topLevelDomain","nativeName","subregion","currencies","languages","borders","borderNames","forEach","borderCountrie","find","alpha3Code","currencie","join","language","goBack","border","index","AppRouter","exact","path","component","to","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.47873f85.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeColorProvider = ({children}) => {\n\n  const [theme, setTheme] = useState(localStorage.getItem('theme') === 'true');\n  document.body.className = theme ? \"dark-body\" : \"light-body\";\n  \n  return (\n    <ThemeContext.Provider value={ {theme, setTheme} }>\n      { children }\n    </ThemeContext.Provider>\n  )\n};","import { FaMoon } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons/lib\";\nimport { useTheme } from \"../../providers/ThemeColorProvider\";\nimport './NavBar.css';\n\nconst NavBar = () => {\n\n  const { theme, setTheme} = useTheme();\n\n  const handleDarkMode = () => {\n    \n    document.body.className = !theme ? \"dark-body\" : \"light-body\";\n    localStorage.setItem('theme', !theme);\n    setTheme(!theme);\n  \n  }\n  \n  return (\n    \n    <div className={ `navbar ${ theme ? 'dark-mode': 'light-mode'}` }>\n\n      <div className={`text ${ theme ? 'dark-text': 'light-text'}` }>\n        Where in the World?\n      </div>\n\n      <div onClick={ handleDarkMode } className=\"dark-toggle\">\n        <IconContext.Provider value={{color : theme ? 'white': 'black' }}>\n          <FaMoon />\n        </IconContext.Provider>\n        <div className={ `text-dark ${ theme ? 'dark-text': 'light-text'}`}>Dark Mode</div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default NavBar;","import axios from 'axios';\n\nconst baseURL = 'https://restcountries.eu/rest/v2';\n\nexport async function getAllCountries(){\n\n  const URL = `${baseURL}/all`;\n  \n  try {\n    const { data: countries } = await axios.get(URL);\n    console.log(countries);\n    return countries;\n\n  } catch (error) {\n    console.log(\"🚀 ~ file: index.js ~ line 13 ~ getCountriesByContinent ~ error\", error)\n  }\n}\n\nexport async function getCountriesByContinent(continent = 'europe'){\n\n  const URL = `${baseURL}/region/${continent}`;\n  \n  try {\n    const { data: countries } = await axios.get(URL);\n    return countries;\n\n  } catch (error) {\n    console.log(\"🚀 ~ file: index.js ~ line 13 ~ getCountriesByContinent ~ error\", error)\n  }\n}\n\nexport async function getCountrieByCode(code){\n\n  if(!code) return;\n\n  const URL =  `${baseURL}/alpha/${code}`;\n  \n  try {\n    \n    const { data: countrie} = await axios.get(URL);\n    \n    return countrie;\n\n  } catch (error) {\n    console.log(error);\n  }\n\n} ","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { getCountriesByContinent } from \"../api\";\nimport { useFilter } from \"../hooks/useFilter\";\n\nconst CountrieContext = createContext();\n\nexport const useCountries = () => useContext(CountrieContext);\n\nexport const CountrieProvider = ({children}) => {\n\n  const initialFilterState = {\n    continent: 'americas',\n    countrie: '',\n  }\n  const { filter, changeCountrie, changeContinent } = useFilter(initialFilterState);\n  const { continent, countrie } = filter;\n  const [ countries, setCountries ] = useState([]);\n  const [ currentCountries, setCurrentCountries ] = useState([]);\n\n  useEffect(() => {\n    setCountries(currentCountries.filter(currentCountrie => currentCountrie.name.toLowerCase().includes(countrie.toLowerCase())));\n  }, [currentCountries, countrie]);\n\n  useEffect(() => {\n    \n    const fetchCountries = async() => {\n      const fetchedCountries = await getCountriesByContinent(continent);\n      setCurrentCountries(fetchedCountries);\n      setCountries(fetchedCountries);\n    };\n\n    fetchCountries();\n\n  }, [continent]);\n\n  //TODO: Bug inside search and borderCountries.\n  return (\n    <CountrieContext.Provider value={ { filter, changeCountrie, changeContinent, countries } }>\n      { children }\n    </CountrieContext.Provider>\n  );\n};","import { useState } from \"react\";\n\nexport const useFilter = (initialState = {}) => {\n\n  const [filter, setFilter] = useState(initialState);\n\n  const changeCountrie = ({target}) => {\n    \n    const { value: countrie } = target;    \n    setFilter({...filter, countrie});\n  }\n\n  const changeContinent = ({target}) => {\n\n    const { value: continent } = target;    \n    setFilter({...filter, continent});\n  };\n\n  return { filter, changeContinent, changeCountrie };\n\n}\n","\nimport { FaSearch } from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport { useCountries } from '../../providers/CountrieProvider';\nimport { useTheme } from '../../providers/ThemeColorProvider';\nimport './Filter.css';\n\nconst Filter = () => {\n\n  const { filter, changeCountrie, changeContinent } = useCountries();\n  const { theme } = useTheme();\n  const { continent, countrie } = filter;\n\n  return (\n    <div className=\"filter-container\">\n      <div className=\"search-input-container\">\n        <IconContext.Provider value={{ color: `${theme ? \"white\" : \"gray\" }`, className: \"global-class-name\" }}>\n          <div className=\"search-icon\">\n            <FaSearch />\n          </div>\n        </IconContext.Provider>\n        <input \n          value={ countrie }\n          onChange={ changeCountrie }\n          type='text'\n          className={`search-input ${theme ? \"dark-mode dark-place dark-text\" : \"light-mode\"}`}\n          placeholder='Search for a country...'/>\n      </div>\n      <div className=\"filter-dropdow-box\">\n        <select \n          value={ continent }\n          onChange={ changeContinent }\n          className={`select ${theme ? \"dark-mode dark-place dark-text\" : \"light-mode\"}`}\n          name=\"continents\"\n          id=\"continents\">\n          <option value=\"africa\">África</option>\n          <option value=\"americas\">America</option>\n          <option value=\"asia\">Asia</option>\n          <option value=\"europe\">Europa</option>\n          <option value=\"oceania\">Oceania</option>\n        </select>\n      </div>\n    </div>\n  )\n};\n\nexport default Filter;","import React from 'react';\nimport './Alert.css';\n\nexport const Alert = ({message = 'Default message'}) => {\n  return (\n    <div className='alert'>\n      <p>  \n        Warning: <span> {message} </span>\n      </p>\n    </div>\n  )\n}\n","import { useHistory } from 'react-router-dom';\nimport { useTheme } from '../../providers/ThemeColorProvider';\nimport './Countrie.css';\n\nconst Countrie = ({\n  alpha2Code,\n  name,\n  population,\n  region,\n  capital,\n  flag\n}) => {\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(`/countrie/${alpha2Code}`);\n  };\n\n  const { theme } = useTheme();\n\n  return (\n    <div onClick={ handleClick }  className={`card-container ${theme ? \"dark-mode\" : \"light-mode\"}`}>\n      <div className=\"card-image\">\n        <img src={ flag } alt=\"name\" className='img'/>\n      </div>\n      <div className={`card-text ${theme ? \"dark-text\" : \"light-text\"}`}>\n        <h3>{ name }</h3>\n        <p>\n          Population: <span className={`${theme ? 'dark-span' : 'light-span'}`}>{ population }</span>\n        </p>\n        <p>\n          Region: <span className={`${theme ? 'dark-span' : 'light-span'}`}>{ region }</span>\n        </p>\n        <p>\n          Capital: <span className={`${theme ? 'dark-span' : 'light-span'}`}>{ capital }</span>\n        </p>\n      </div>     \n    </div>\n  )\n};\n\nexport default Countrie;","import { useCountries } from '../../providers/CountrieProvider';\nimport { Alert } from '../alert/Alert';\nimport Countrie from '../countrie/Countrie';\nimport Filter from '../filter/Filter';\n\nimport './Countries.css';\n\nconst Countries = () => {\n\n  const  { filter, countries } = useCountries();\n\n  const  {continent, countrie} = filter;\n  return (\n    <>\n      <Filter />\n\n      <div className={countries.length === 1 ? \"container container-one\" : \"container\"}>\n      {\n        countries.length === 0 && \n        <Alert message={`There isn't any countrie with the name ${countrie} in ${continent.toUpperCase()} continent`}/>\n      }\n\n      {\n        countries.map( countrie => (\n          <Countrie\n            key={ countrie.alpha2Code }\n            {...countrie} \n            />\n        ))\n      }\n      </div>\n    </>\n  )\n}\n\nexport default Countries;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport {FaArrowLeft} from 'react-icons/fa';\nimport './CountrieDetail.css';\nimport { useTheme } from '../../providers/ThemeColorProvider';\nimport { getCountrieByCode, getCountriesByContinent } from '../../api';\n\nconst CountrieDetail = ({history}) => {\n  \n  const { id } = useParams();\n  const { theme } = useTheme();\n  \n  const [ currentCountrie, setCurrentCountrie ] = useState();\n  const [ countries, setCountries] = useState();\n\n  useEffect(() => {\n    \n    async function getInformation(){\n      const countrie = await getCountrieByCode(id);\n      setCurrentCountrie(countrie);\n      const fetchedCountries = await getCountriesByContinent(countrie.region);\n      setCountries(fetchedCountries);\n    } \n    getInformation();\n\n  }, [id]);\n\n\n  if(!currentCountrie || !countries ){\n    return <h1> Loading...</h1>\n  }\n  \n  const  {\n    flag,\n    topLevelDomain,\n    name,\n    nativeName, \n    population,\n    region, \n    subregion,\n    capital,\n    currencies, \n    languages, \n    borders  \n  } = currentCountrie;\n\n  let countriCurrencies;\n  let currentLanguages;\n\n  const borderNames = [];\n\n  if(borders.length > 0){\n    borders.forEach(borderCountrie => {\n      const { name } = countries.find(currentCountrie => currentCountrie.alpha3Code === borderCountrie);\n      borderNames.push(name);\n    });\n  }\n\n  if ( currencies.length > 0){\n    const currencieArray =   currencies.map(currencie => currencie.name);\n    countriCurrencies = currencieArray.join(',');\n  }  \n\n  if (languages.length > 0) {\n    const languagesArray =   languages.map(language => language.name);\n    currentLanguages = languagesArray.join(', ');\n  }\n\n  function handleBackButton() {\n\n    if(history.length <= 2){\n      history.push(\"/\");\n    } else {\n      history.goBack();\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={ handleBackButton } className={`btn-back ${theme ? \"dark-text dark-mode\" : \"light-text light-mode\"}`}>\n        <FaArrowLeft/>\n        <span>Back</span>\n      </button>\n      <div className=\"flag-text-container\">\n        <img className=\"img-flag\" src={flag} alt=\"\"/>\n        <div className={`text-section  ${theme ? \"dark-text\" : \"light-text\"}`}>\n          <h2>{ name }</h2>\n\n          <div className='information-text'>\n            <div className='left-section-text'>\n              <p>\n                Native Name: <span>{ nativeName }</span>\n              </p>\n              <p>\n                Population: <span>{ population }</span>\n              </p>\n              <p>\n                Region: <span>{ region }</span>\n              </p>\n              <p>\n                Sub Region: <span>{ subregion }</span>\n              </p>\n              <p>\n                Capital: <span>{ capital }</span>\n              </p>\n            </div>\n            <div className=\"right-section-text\">\n              <p>\n                Top Level Domain: <span>{ topLevelDomain.join(',') }</span>\n              </p>\n              <p>\n                Currencies: <span>{ countriCurrencies || 'NO DATA'}</span>\n              </p>\n              <p>\n                Languages: <span>{ currentLanguages || 'NO LANGUAGES' }</span>\n              </p>\n            </div>\n          </div>\n\n          <div className=\"border-countries-container\">\n            <span>Border Countries:</span>\n            <div className=\"border-box\">\n\n              {\n                borderNames.length > 0 ?\n                borderNames.map((border, index) => <div key={ index } className={`border-countrie ${theme ? \"dark-mode\" : \"light-mode\"}`}>{ border }</div>)\n                : <p className={`border-countrie ${theme ? \"dark-mode\" : \"light-mode\"}`}>There aren't borders</p>\n              }\n\n              \n            </div>            \n          </div>          \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CountrieDetail;\n","import React from 'react'\nimport {HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Countries } from '../components';\nimport CountrieDetail from '../components/countrieDetail/CountrieDetail';\nconst AppRouter = () => {\n  return (\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/countrie/:id\" component={ CountrieDetail }/>\n          <Route exact path=\"/\" component={ Countries }/>\n          <Redirect to=\"/\"/>\n        </Switch>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default AppRouter;\n","import { NavBar } from \"./components\";\nimport { CountrieProvider } from \"./providers/CountrieProvider\";\nimport { ThemeColorProvider } from \"./providers/ThemeColorProvider\";\nimport \"./App.css\";\nimport AppRouter from \"./routers/AppRouter\";\n\nfunction App() {\n\n  return (\n      <ThemeColorProvider>\n        <NavBar />\n        <div className=\"main-container\">\n          <CountrieProvider>\n            <AppRouter />\n          </CountrieProvider>\n        </div>\n      </ThemeColorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}