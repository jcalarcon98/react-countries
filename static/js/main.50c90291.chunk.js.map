{"version":3,"sources":["providers/ThemeColorProvider.js","components/navbar/Navbar.js","api/index.js","providers/CountrieProvider.js","hooks/useFilter.js","components/filter/Filter.js","components/alert/Alert.js","components/countrie/Countrie.js","components/countries/Countries.js","App.js","index.js"],"names":["ThemeContext","createContext","useTheme","useContext","ThemeColorProvider","children","useState","theme","setTheme","Provider","value","NavBar","className","onClick","document","body","color","getCountriesByContinent","a","continent","URL","axios","get","countries","data","console","log","CountrieContext","useCountries","CountrieProvider","initialState","filter","setFilter","changeContinent","target","changeCountrie","countrie","useFilter","setCountries","currentCountries","setCurrentCountries","useEffect","currentCountrie","name","toLowerCase","includes","fetchedCountries","fetchCountries","Filter","onChange","type","placeholder","id","Alert","message","Countrie","population","region","capital","flag","src","alt","Countries","length","toUpperCase","map","alpha2Code","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.50c90291.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeColorProvider = ({children}) => {\n\n  const [theme, setTheme] = useState(false);\n  \n  return (\n    <ThemeContext.Provider value={ {theme, setTheme} }>\n      { children }\n    </ThemeContext.Provider>\n  )\n};","import { FaMoon } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons/lib\";\nimport { useTheme } from \"../../providers/ThemeColorProvider\";\nimport './NavBar.css';\n\nconst NavBar = () => {\n\n  const { theme, setTheme} = useTheme();\n\n  const handleDarkMode = () => {\n    \n    document.body.className = !theme ? \"dark-body\" : \"light-body\";\n    setTheme(!theme);\n  }\n  return (\n    \n    <div className={ `navbar ${ theme ? 'dark-mode': 'light-mode'}` }>\n\n      <div className={`text ${ theme ? 'dark-text': 'light-text'}` }>\n        Where in the World?\n      </div>\n\n      <div onClick={ handleDarkMode } className=\"dark-toggle\">\n        <IconContext.Provider value={{color : theme ? 'white': 'black' }}>\n          <FaMoon />\n        </IconContext.Provider>\n        <div className={ `text-dark ${ theme ? 'dark-text': 'light-text'}`}>Dark Mode</div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default NavBar;","import axios from 'axios';\n\nexport async function getCountriesByContinent(continent = 'europe'){\n\n  const URL = `https://restcountries.eu/rest/v2/region/${continent}`;\n  \n  try {\n    const { data: countries } = await axios.get(URL);\n    return countries;\n\n  } catch (error) {\n    console.log(\"üöÄ ~ file: index.js ~ line 13 ~ getCountriesByContinent ~ error\", error)\n  }\n}","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { getCountriesByContinent } from \"../api\";\nimport { useFilter } from \"../hooks/useFilter\";\n\nconst CountrieContext = createContext();\n\nexport const useCountries = () => useContext(CountrieContext);\n\nexport const CountrieProvider = ({children}) => {\n\n  const initialFilterState = {\n    continent: 'americas',\n    countrie: '',\n  }\n  const { filter, changeCountrie, changeContinent } = useFilter(initialFilterState);\n  \n  const { continent, countrie } = filter;\n\n  const [countries, setCountries] = useState([]);\n\n  const [currentCountries, setCurrentCountries] = useState([]);\n\n  useEffect(() => {\n\n    setCountries(currentCountries.filter(currentCountrie => currentCountrie.name.toLowerCase().includes(countrie.toLowerCase())));\n\n  }, [currentCountries, countrie]);\n\n  \n  useEffect(() => {\n    \n    const fetchCountries = async() => {\n\n      const fetchedCountries = await getCountriesByContinent(continent);\n      setCurrentCountries(fetchedCountries);\n      setCountries(fetchedCountries);\n    };\n\n    fetchCountries();\n\n  }, [continent]);\n\n  return (\n    <CountrieContext.Provider value={ { filter, changeCountrie, changeContinent, countries } }>\n      { children }\n    </CountrieContext.Provider>\n  );\n};","import { useState } from \"react\";\n\nexport const useFilter = (initialState = {}) => {\n\n  const [filter, setFilter] = useState(initialState);\n\n  const changeCountrie = ({target}) => {\n    \n    const { value: countrie } = target;    \n    setFilter({...filter, countrie});\n  }\n\n  const changeContinent = ({target}) => {\n\n    const { value: continent } = target;    \n    setFilter({...filter, continent});\n  };\n\n  return { filter, changeContinent, changeCountrie };\n\n}\n","\nimport { FaSearch } from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport { useCountries } from '../../providers/CountrieProvider';\nimport { useTheme } from '../../providers/ThemeColorProvider';\nimport './Filter.css';\n\nconst Filter = () => {\n\n  const { filter, changeCountrie, changeContinent } = useCountries();\n  const { theme } = useTheme();\n  const { continent, countrie } = filter;\n\n  return (\n    <div className=\"filter-container\">\n      <div className=\"search-input-container\">\n        <IconContext.Provider value={{ color: `${theme ? \"white\" : \"gray\" }`, className: \"global-class-name\" }}>\n          <div className=\"search-icon\">\n            <FaSearch />\n          </div>\n        </IconContext.Provider>\n        <input \n          value={ countrie }\n          onChange={ changeCountrie }\n          type='text'\n          className={`search-input ${theme ? \"dark-mode dark-place dark-text\" : \"light-mode\"}`}\n          placeholder='Search for a country...'/>\n      </div>\n      <div className=\"filter-dropdow-box\">\n        <select \n          value={ continent }\n          onChange={ changeContinent }\n          className={`select ${theme ? \"dark-mode dark-place dark-text\" : \"light-mode\"}`}\n          name=\"continents\"\n          id=\"continents\">\n          <option value=\"africa\">√Åfrica</option>\n          <option value=\"americas\">America</option>\n          <option value=\"asia\">Asia</option>\n          <option value=\"europe\">Europa</option>\n          <option value=\"oceania\">Oceania</option>\n        </select>\n      </div>\n    </div>\n  )\n};\n\nexport default Filter;","import React from 'react';\nimport './Alert.css';\n\nexport const Alert = ({message = 'Default message'}) => {\n  return (\n    <div className='alert'>\n      <p>  \n        Warning: <span> {message} </span>\n      </p>\n    </div>\n  )\n}\n","import { useTheme } from '../../providers/ThemeColorProvider';\nimport './Countrie.css';\n\nconst Countrie = ({\n  name,\n  population,\n  region,\n  capital,\n  flag\n}) => {\n\n  const { theme } = useTheme();\n\n  return (\n    <div className={`card-container ${theme ? \"dark-mode\" : \"light-mode\"}`}>\n      <div className=\"card-image\">\n        <img src={ flag } alt=\"name\" className='img'/>\n      </div>\n      <div className={`card-text ${theme ? \"dark-text\" : \"light-text\"}`}>\n        <h3>{ name }</h3>\n        <p>\n          Population: <span className={`${theme ? 'dark-span' : 'light-span'}`}>{ population }</span>\n        </p>\n        <p>\n          Region: <span className={`${theme ? 'dark-span' : 'light-span'}`}>{ region }</span>\n        </p>\n        <p>\n          Capital: <span className={`${theme ? 'dark-span' : 'light-span'}`}>{ capital }</span>\n        </p>\n      </div>\n    </div>\n  )\n};\n\nexport default Countrie;","import { useCountries } from '../../providers/CountrieProvider';\nimport { Alert } from '../alert/Alert';\nimport Countrie from '../countrie/Countrie';\n\nimport './Countries.css';\n\nconst Countries = () => {\n\n  const  { filter, countries } = useCountries();\n\n  const  {continent, countrie} = filter;\n  return (\n    <div className={countries.length === 1 ? \"container container-one\" : \"container\"}>\n      {\n        countries.length === 0 && \n        <Alert message={`There isn't any countrie with the name ${countrie} in ${continent.toUpperCase()} continent`}/>\n      }\n\n      {\n        countries.map( countrie => (\n          <Countrie\n            key={countrie.alpha2Code}\n            {...countrie} \n            />\n        ))\n      }\n\n    </div>\n  )\n}\n\nexport default Countries;","import { Countries, Filter, NavBar } from \"./components\";\nimport { CountrieProvider } from \"./providers/CountrieProvider\";\nimport { ThemeColorProvider } from \"./providers/ThemeColorProvider\";\nimport \"./App.css\";\n\nfunction App() {\n\n  return (\n      <ThemeColorProvider>\n        <NavBar />\n        <div className=\"main-container\">\n          <CountrieProvider>\n            <Filter />\n            <Countries />\n          </CountrieProvider>\n        </div>\n      </ThemeColorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}